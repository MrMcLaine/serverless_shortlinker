org: mrmclaine
app: sls-linker
service: module-03-1
frameworkVersion: "3"

plugins:
  - serverless-dotenv-plugin

custom:
  usersTableName: UsersTable
  linksTableName: LinksTable
  JWT_SECRET: SECRET


provider:
  name: aws
  runtime: nodejs18.x
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
      Resource:
        - "arn:aws:dynamodb:us-east-1:870642761716:table/UsersTable"
        - "arn:aws:dynamodb:us-east-1:870642761716:table/UsersTable/index/EmailIndex"

  environment:
    USERS_TABLE: ${self:custom.usersTableName}
    JWT_SECRET: ${self:custom.JWT_SECRET}

functions:
  authorizer:
    handler: dist/authorizer.handler
    package:
      individually: true
      include:
        - authorizer.js
  test:
    handler: dist/test.handler
    events:
      - http:
          path: test
          method: get    
  register:
    handler: dist/register.handler
    package:
      individually: true
      include:
        - dist/register.js
    events:
      - http:
          path: register
          method: post
  login:
    handler: dist/login.handler
    package:
      individually: true
      include:
        - dist/login.js
    events:
      - http:
          path: login
          method: post
  createLink:
    handler: dist/createLink.handler
    package:
      individually: true
      include:
        - dist/createLink.js
    events:
      - http:
          path: links
          method: post

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.usersTableName}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"

    LinksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.linksTableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: linkId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: linkId
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: expiredAt
          Enabled: true
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
